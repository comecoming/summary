1.ifconfig wlan0 192.168.1.xxx //update_config
2.route add default gw 192.168.1.1
3.vim /etc/resolv.conf
nameserver 192.168.1.1
4./etc/wpa_supplicant/wpa_supplicant.conf

<wpa_supplicant>
wpa_supplicant -d -Dwext -iwlan0 -c/data/misc/wifi/wpa_supplicant.conf
-d ：debug info
-Dwext ：wext，nl80211
-iwlan0 ：wlan0，if name
/system/bin/wpa_supplicant ：wpa_supplicant path
/data/misc/wifi/wpa_supplicant.conf ：wpa_supplicant config file path


<wpa_cli>
wpa_cli -iwlan0 -p/data/system/wpa_supplicant
注，-p/data/system/wpa_supplicant中的wpa_supplicant并不是可执行程序，而是个控制套接字

status	stat	displays the current connection status

disconnect	disc	prevents wpa_supplicant from connecting to any access point

quit	q	exits wpa_cli

terminate	term	kills wpa_supplicant

reconfigure	recon	reloads wpa_supplicant with the configuration file supplied (-c parameter)

scan	scan	scans for available access points (only scans it, doesn't display anything)

scan_result	scan_r	displays the results of the last scan

list_networks	list_n	displays a list of configured networks and their status (active or not, enabled or disabled)

select_network	select_n	select a network among those defined to initiate a connection (ie select_network 0)

enable_network	enable_n	makes a configured network available for selection (ie enable_network 0)

disable_network	disable_n	makes a configured network unavailable for selection (ie disable_network 0)

remove_network	remove_n	removes a network and its configuration from the list (ie remove_network 0)

add_network	add_n	adds a new network to the list. Its id will be created automatically

set_network	set_n	shows a very short list of available options to configure a network when supplied with no parameters.

get_network	get_n	displays the required parameter for the specified network. See next section for a list of parameters

save_config	save_c	saves the configuration

eg.0 
	set_network <network id> <key> <parameter> [<parameter>]
	get_network <network id> <key>

eg.1、连接无加密的AP
>add_network  (It will display a network id for you, assume it returns 0)
>set_network 0 ssid "666"
>set_network 0 key_mgmt NONE
>enable_network 0
>quit
eg.2、连接WEP加密AP
>add_network   (assume return 1)
>set_network 1 ssid "666"
>set_network 1 key_mgmt NONE
>set_network 1 wep_key0 "your ap password"
>enable_network 1
eg.3、连接WPA-PSK/WPA2-PSK加密的AP
>add_network   (assume return 2)
>set_network 2 ssid "666"
>set_network 2 psk "your pre-shared key"
>enable_network 2

wpa_supplicant.conf
eg1. 
ctrl_interface=DIR=/data/system/wpa_supplicant GROUP=system update_config=1
network={
ssid="my access point"
proto=WPA
key_mgmt=WPA-PSK
psk="you pass words"
}

ctrl_interface=/var/run/wpa_supplicant  
ctrl_interface_group=wheel  
update_config=1  
  
eg2
network={  
    ssid="xxxx"  
    scan_ssid=1  //hiden ssid
    psk=xxxxxxxxx37bca5cf24a345f514d319211822f568bba28f8f0b74c894e7644  //password from wpa_passphrase
    proto=RSN  //WPA = WPA/IEEE 802.11i/D3.0
				//RSN = WPA2/IEEE 802.11i (also WPA2 can be used as an alias for RSN)
    key_mgmt=WPA-PSK  //WPA-PSK = WPA pre-shared key (this requires 'psk' field)
						//WPA-EAP = WPA using EAP authentication
						//NONE = WPA is not used; plaintext or static WEP could be used
    pairwise=CCMP  //CCMP = AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0]  ---看到没，这个就是AES，换了马甲而已  
					//TKIP = Temporal Key Integrity Protocol [IEEE 802.11i/D7.0] ---TKIP 这个倒是没变  
					//NONE = Use only Group Keys (deprecated, should not be included if APs support  pairwise keys)   ---这个估计很少用  
# If not set, this defaults to: CCMP TKIP  ---不设置的话是CCMP TKIP，看似正确，其实有些路由器无法自动识别，只能二选一，很坑爹。 
    auth_alg=OPEN  
}  

Key	Description	Parameters
ssid	Access point name	string
id_str	String identifying the network	string
priority	Connection priority over other APs	number (0 being the default low priority)
bssid	Mac address of the access point	mac address
scan_ssid	Enable/disbale ssid scan	0, 1, 2
key_mgmt	Type of key management	WPA-PSK, WPA_EAP, None
pairwise	Pairwise ciphers for WPA	CCMP, TKIP
group=TKIP	Group ciphers for WPA	CCMP, TKIP, WEP104, WEP40
psk	Pre-Shared Key (clear or encrypted)	string
wep_key0	WEP key (up to 4: wep_key[0123])	string
eap	Extensible Authentication Protocol	MD5, MSCHAPV2, OTP, GTC, TLS, PEAP, TTLS
identity	EAP identity string	string
password	EAP password	string
ca_cert	Pathname to CA certificate file	/full/path/to/certificate
client_cert	Pathname to client certificate	/full/path/to/certificate (PEM/DER)
private_key	Pathname to a client private key file	/full/path/to/private_key (PEM/DER/PFX)

